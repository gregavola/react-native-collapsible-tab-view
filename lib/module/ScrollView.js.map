{"version":3,"names":["React","Animated","useAfterMountEffect","useChainCallback","useCollapsibleStyle","useScrollHandlerY","useSharedAnimatedRef","useTabNameContext","useTabsContext","useUpdateScrollViewContentSize","ScrollViewMemo","memo","forwardRef","props","passRef","ScrollView","contentContainerStyle","style","onContentSizeChange","children","refreshControl","rest","name","ref","setRef","contentInset","_style","_contentContainerStyle","progressViewOffset","scrollHandler","enable","onLayout","useEffect","scrollContentSizeChange","scrollContentSizeChangeHandlers","useMemo","memoRefreshControl","cloneElement","memoContentInset","top","memoContentOffset","x","y","memoContentContainerStyle","memoStyle"],"sources":["ScrollView.tsx"],"sourcesContent":["import React from 'react'\nimport { ScrollViewProps, ScrollView as RNScrollView } from 'react-native'\nimport Animated from 'react-native-reanimated'\n\nimport {\n  useAfterMountEffect,\n  useChainCallback,\n  useCollapsibleStyle,\n  useScrollHandlerY,\n  useSharedAnimatedRef,\n  useTabNameContext,\n  useTabsContext,\n  useUpdateScrollViewContentSize,\n} from './hooks'\n\n/**\n * Used as a memo to prevent rerendering too often when the context changes.\n * See: https://github.com/facebook/react/issues/15156#issuecomment-474590693\n */\nconst ScrollViewMemo = React.memo(\n  React.forwardRef<RNScrollView, React.PropsWithChildren<ScrollViewProps>>(\n    (props, passRef) => {\n      return (\n        <Animated.ScrollView\n          // @ts-expect-error reanimated types are broken on ref\n          ref={passRef}\n          {...props}\n        />\n      )\n    }\n  )\n)\n\n/**\n * Use like a regular ScrollView.\n */\nexport const ScrollView = React.forwardRef<\n  RNScrollView,\n  React.PropsWithChildren<Omit<ScrollViewProps, 'onScroll'>>\n>(\n  (\n    {\n      contentContainerStyle,\n      style,\n      onContentSizeChange,\n      children,\n      refreshControl,\n      ...rest\n    },\n    passRef\n  ) => {\n    const name = useTabNameContext()\n    const ref = useSharedAnimatedRef<RNScrollView>(passRef)\n    const { setRef, contentInset } = useTabsContext()\n    const {\n      style: _style,\n      contentContainerStyle: _contentContainerStyle,\n      progressViewOffset,\n    } = useCollapsibleStyle()\n    const { scrollHandler, enable } = useScrollHandlerY(name)\n    const onLayout = useAfterMountEffect(rest.onLayout, () => {\n      'worklet'\n      // we enable the scroll event after mounting\n      // otherwise we get an `onScroll` call with the initial scroll position which can break things\n      enable(true)\n    })\n\n    React.useEffect(() => {\n      setRef(name, ref)\n    }, [name, ref, setRef])\n\n    const scrollContentSizeChange = useUpdateScrollViewContentSize({\n      name,\n    })\n\n    const scrollContentSizeChangeHandlers = useChainCallback(\n      React.useMemo(\n        () => [scrollContentSizeChange, onContentSizeChange],\n        [onContentSizeChange, scrollContentSizeChange]\n      )\n    )\n\n    const memoRefreshControl = React.useMemo(\n      () =>\n        refreshControl &&\n        React.cloneElement(refreshControl, {\n          progressViewOffset,\n          ...refreshControl.props,\n        }),\n      [progressViewOffset, refreshControl]\n    )\n\n    const memoContentInset = React.useMemo(\n      () => ({ top: contentInset }),\n      [contentInset]\n    )\n\n    const memoContentOffset = React.useMemo(\n      () => ({ x: 0, y: -contentInset }),\n      [contentInset]\n    )\n\n    const memoContentContainerStyle = React.useMemo(\n      () => [\n        _contentContainerStyle,\n        // TODO: investigate types\n        contentContainerStyle as any,\n      ],\n      [_contentContainerStyle, contentContainerStyle]\n    )\n    const memoStyle = React.useMemo(() => [_style, style], [_style, style])\n\n    return (\n      <ScrollViewMemo\n        {...rest}\n        onLayout={onLayout}\n        ref={ref}\n        bouncesZoom={false}\n        style={memoStyle}\n        contentContainerStyle={memoContentContainerStyle}\n        onScroll={scrollHandler}\n        onContentSizeChange={scrollContentSizeChangeHandlers}\n        scrollEventThrottle={16}\n        contentInset={memoContentInset}\n        contentOffset={memoContentOffset}\n        automaticallyAdjustContentInsets={false}\n        refreshControl={memoRefreshControl}\n        // workaround for: https://github.com/software-mansion/react-native-reanimated/issues/2735\n        onMomentumScrollEnd={() => {}}\n      >\n        {children}\n      </ScrollViewMemo>\n    )\n  }\n)\n"],"mappings":"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"}